import{H as d,y as u,C as h}from"./BLjF41zC.js";const g=d("tournament",{state:()=>({tournaments:[],currentTournament:null,standings:null,allStandings:[],loading:!1,error:null}),getters:{activeTournaments(){return this.tournaments.filter(t=>t.isActive)},upcomingTournaments(){const t=new Date;return this.tournaments.filter(e=>new Date(e.date)>t)},pastTournaments(){const t=new Date;return this.tournaments.filter(e=>new Date(e.date)<=t)}},actions:{setError(t){this.error=t},setLoading(t){this.loading=t},async fetchTournaments(){this.setLoading(!0),this.setError(null);try{const t=h(),{fetch:e}=u(),n=await e("/tournaments");this.tournaments=n}catch(t){console.error("Error fetching tournaments:",t),this.setError(t.message||"Failed to load tournaments")}finally{this.setLoading(!1)}},async createTournament(t){this.setLoading(!0),this.setError(null);try{const e=h(),{fetch:n}=u(),a=await n("/tournaments",{method:"POST",body:t});return this.tournaments.unshift(a),a}catch(e){return console.error("Error creating tournament:",e),this.setError(e.message||"Failed to create tournament"),null}finally{this.setLoading(!1)}},async updateTournament(t,e){this.setLoading(!0),this.setError(null);try{const n=h(),{fetch:a}=u(),o=await a(`/tournaments/${t}`,{method:"PATCH",body:e}),i=this.tournaments.findIndex(l=>l.id===t);return i!==-1&&(this.tournaments[i]=o),o}catch(n){return console.error("Error updating tournament:",n),this.setError(n.message||"Failed to update tournament"),null}finally{this.setLoading(!1)}},async deleteTournament(t){this.setLoading(!0),this.setError(null);try{const e=h(),{fetch:n}=u();return await n(`/tournaments/${t}`,{method:"DELETE"}),this.tournaments=this.tournaments.filter(a=>a.id!==t),!0}catch(e){return console.error("Error deleting tournament:",e),this.setError(e.message||"Failed to delete tournament"),!1}finally{this.setLoading(!1)}},async fetchTournamentStandings(t){this.setLoading(!0),this.setError(null);try{console.log("Fetching tournament standings for ID:",t);const{fetch:e}=u(),n=await e(`/tournaments/${t}/standings`);console.log("Tournament standings response:",n),this.standings=n,this.currentTournament=n.tournament}catch(e){console.error("Error fetching tournament standings:",e),this.setError(e.message||"Failed to load tournament standings")}finally{this.setLoading(!1)}},async fetchAllStandings(){this.setLoading(!0),this.setError(null);try{const t=h(),{fetch:e}=u(),n=await e("/tournaments/standings");this.allStandings=n}catch(t){console.error("Error fetching all standings:",t),this.setError(t.message||"Failed to load tournament standings")}finally{this.setLoading(!1)}},async updateTournamentResult(t,e){var n,a,o,i,l,c;this.setLoading(!0),this.setError(null);try{console.log("Updating tournament result:",{tournamentId:t,resultData:e});const{fetch:s}=u(),r=await s(`/tournaments/${t}/results/user`,{method:"PATCH",body:e});return console.log("Update tournament result response:",r),!0}catch(s){console.error("Error updating tournament result:",s);let r="Failed to update tournament result";return((n=s.response)==null?void 0:n.status)===400?r=((a=s.data)==null?void 0:a.message)||"Invalid data provided":((o=s.response)==null?void 0:o.status)===401?r="Authentication failed":((i=s.response)==null?void 0:i.status)===403?r="You do not have permission to update tournament results":((l=s.response)==null?void 0:l.status)===404?r="Tournament or user not found":(c=s.data)!=null&&c.message?r=s.data.message:s.message&&(r=s.message),this.setError(r),!1}finally{this.setLoading(!1)}},async bulkUpdateResults(t,e){var n,a,o,i,l,c;this.setLoading(!0),this.setError(null);try{console.log("Bulk updating tournament results:",{tournamentId:t,results:e});const{fetch:s}=u(),r=await s(`/tournaments/${t}/results/bulk`,{method:"PATCH",body:{results:e}});return console.log("Bulk update tournament results response:",r),!0}catch(s){console.error("Error bulk updating tournament results:",s);let r="Failed to update tournament results";return((n=s.response)==null?void 0:n.status)===400?r=((a=s.data)==null?void 0:a.message)||"Invalid data provided":((o=s.response)==null?void 0:o.status)===401?r="Authentication failed":((i=s.response)==null?void 0:i.status)===403?r="You do not have permission to update tournament results":((l=s.response)==null?void 0:l.status)===404?r="Tournament not found":(c=s.data)!=null&&c.message?r=s.data.message:s.message&&(r=s.message),this.setError(r),!1}finally{this.setLoading(!1)}},clearCurrentTournament(){this.currentTournament=null,this.standings=null},clearError(){this.error=null}}});export{g as u};
