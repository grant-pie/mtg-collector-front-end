import{_ as j}from"./BcrJk5wk.js";import{g as R,l as V,m as U,n as y,c as a,a as e,p as I,q,v as P,t as c,F as Q,r as H,o as r,x as G,j as O,b as F,w as W,y as Y,k as L,z as J,d as K}from"./BldJ7gzI.js";import{u as B,_ as X}from"./toIEnHHo.js";import{_ as Z}from"./BWfbaynp.js";import{u as ee}from"./BCla5gcS.js";const te={class:"bg-white p-6 rounded shadow-md"},se={key:0,class:"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4"},ae={key:1},re={class:"mb-4"},le=["disabled"],oe={class:"flex gap-2 mb-4"},de=["disabled"],ne=["disabled"],ie={key:0,class:"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4"},ce={key:1,class:"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-4"},ue={key:2,class:"mt-4"},pe={class:"overflow-x-auto"},ye={class:"min-w-full divide-y divide-gray-200"},me={class:"bg-white divide-y divide-gray-200"},fe={class:"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900"},ve={class:"px-6 py-4 whitespace-nowrap text-sm text-gray-500"},ge={class:"px-6 py-4 whitespace-nowrap text-sm text-gray-500"},xe={class:"px-6 py-4 whitespace-nowrap text-sm text-gray-500"},he={key:0},be={key:1,class:"text-red-500"},_e={key:2},ke={class:"px-6 py-4 whitespace-nowrap text-sm text-gray-500"},we={key:0,class:"text-green-500"},Ie={key:1,class:"text-blue-500"},$e={key:2,class:"text-red-500"},Ce={key:3,class:"text-gray-400"},Ee={key:4,class:"text-gray-400"},Se=R({__name:"ImportCardsList",props:{userId:{type:String,required:!0}},setup(T){const D=T,$=V(),N=B(),S=U(()=>$.isAdmin),k=y(""),p=y([]),v=y(!1),l=y(!1),x=y(!1),w=y(0),b=y(null),g=y(null),E=U(()=>p.value.length>0&&p.value.every(h=>h.scryfallId||h.scryfallIdError)),m=()=>{if(!(!k.value||v.value)){v.value=!0,b.value=null,g.value=null,p.value=[];try{const h=k.value.split(`
`).filter(u=>u.trim());for(const u of h){const n=u.match(/^(\d+)\s+(.*?)\s+\[(\w+)\]\.?$/);if(n){const[_,i,d,s]=n;p.value.push({name:d.trim(),set:s.trim(),qty:parseInt(i.trim(),10)})}}p.value.length===0&&(b.value="No valid card entries found. Please check your format.")}catch(h){console.error("Error parsing card list:",h),b.value=h.message||"Failed to parse card list"}finally{v.value=!1}}},o=async()=>{if(l.value||x.value)return;l.value=!0,x.value=!0,w.value=0,b.value=null,g.value=null;const h=_=>new Promise(i=>setTimeout(i,_));let u=0,n=0;try{for(let _=0;_<p.value.length;_++){const i=p.value[_];if(!i.scryfallId&&!i.scryfallIdError){try{const d=encodeURIComponent(i.name),s=await fetch(`https://api.scryfall.com/cards/named?exact=${d}`);if(!s.ok)throw new Error(`Card not found: ${s.statusText}`);const t=await s.json();t.id?i.scryfallId=t.id.toString():(i.scryfallIdError="No scryfall ID available",n++)}catch(d){console.error(`Error fetching scryfall ID for ${i.name}:`,d),i.scryfallIdError=d.message||"Failed to fetch ID",n++}await h(100)}if(i.scryfallId&&!i.added&&!i.addError){i.adding=!0;try{for(let d=0;d<i.qty;d++)await N.addCardToUser(D.userId,i.scryfallId),i.qty>1&&d<i.qty-1&&await h(100);i.added=!0,i.adding=!1,u+=i.qty}catch(d){console.error(`Error adding ${i.name} to user:`,d),i.addError=d.message||"Failed to add card",i.adding=!1,n++}}w.value=_+1}u>0?(g.value=`Successfully added ${u} card${u!==1?"s":""} to the user's collection.`,n>0&&(g.value+=` Failed to add ${n} card${n!==1?"s":""}.`)):n>0&&(b.value=`Failed to add ${n} card${n!==1?"s":""} to the user's collection.`)}catch(_){console.error("Error in import process:",_),b.value=_.message||"Failed to import cards"}finally{l.value=!1,x.value=!1}};return(h,u)=>(r(),a("div",te,[u[5]||(u[5]=e("h2",{class:"text-2xl font-bold mb-4"},"Import Cards from Text",-1)),S.value?(r(),a("div",ae,[e("div",re,[u[1]||(u[1]=e("label",{for:"cardList",class:"block text-gray-700 mb-2"},"Card List",-1)),q(e("textarea",{"onUpdate:modelValue":u[0]||(u[0]=n=>k.value=n),id:"cardList",class:"w-full p-2 border rounded h-40",placeholder:"Paste card list here (e.g. '1 Card Name [SET]')",disabled:v.value},null,8,le),[[P,k.value]]),u[2]||(u[2]=e("p",{class:"text-sm text-gray-500 mt-1"}," Format: Quantity Card Name [Set Code]. One card per line. ",-1))]),e("div",oe,[e("button",{onClick:m,class:"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded",disabled:v.value||!k.value}," Parse Card List ",8,de),p.value.length>0&&!E.value?(r(),a("button",{key:0,onClick:o,class:"bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded",disabled:l.value||x.value},c(l.value?`Processing (${w.value}/${p.value.length})`:"Import Cards"),9,ne)):I("",!0)]),b.value?(r(),a("div",ie,c(b.value),1)):I("",!0),g.value?(r(),a("div",ce,c(g.value),1)):I("",!0),p.value.length>0?(r(),a("div",ue,[u[4]||(u[4]=e("h3",{class:"text-xl font-semibold mb-3"},"Parsed Cards",-1)),e("div",pe,[e("table",ye,[u[3]||(u[3]=e("thead",{class:"bg-gray-50"},[e("tr",null,[e("th",{scope:"col",class:"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"},"Card Name"),e("th",{scope:"col",class:"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"},"Set"),e("th",{scope:"col",class:"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"},"Qty"),e("th",{scope:"col",class:"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"},"Scryfall ID"),e("th",{scope:"col",class:"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"},"Status")])],-1)),e("tbody",me,[(r(!0),a(Q,null,H(p.value,(n,_)=>(r(),a("tr",{key:_},[e("td",fe,c(n.name),1),e("td",ve,c(n.set),1),e("td",ge,c(n.qty),1),e("td",xe,[n.scryfallId?(r(),a("span",he,c(n.scryfallId),1)):n.scryfallIdError?(r(),a("span",be,"Error: "+c(n.scryfallIdError),1)):(r(),a("span",_e,"-"))]),e("td",ke,[n.added?(r(),a("span",we,"Added")):n.adding?(r(),a("span",Ie,"Adding...")):n.addError?(r(),a("span",$e,"Error: "+c(n.addError),1)):n.scryfallId?(r(),a("span",Ee,"Pending")):(r(),a("span",Ce,"Need ID"))])]))),128))])])])])):I("",!0)])):(r(),a("div",se," Only administrators can import cards. "))]))}}),De={class:"bg-white p-6 rounded shadow-md"},Ne={key:0,class:"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4"},Ae={key:1},Fe={class:"mb-4"},Le=["disabled"],Ue={class:"mb-4"},Te=["disabled"],qe={class:"flex gap-2 mb-4"},Pe=["disabled"],Me=["disabled"],Re=["disabled"],Ve={key:0,class:"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4"},Be={key:1,class:"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-4"},Qe={key:2,class:"mt-4"},He={class:"text-xl font-semibold mb-3"},ze={class:"overflow-x-auto"},je={class:"min-w-full divide-y divide-gray-200"},Ge={class:"bg-white divide-y divide-gray-200"},Oe={class:"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900"},We={class:"px-6 py-4 whitespace-nowrap text-sm text-gray-500"},Ye={class:"px-6 py-4 whitespace-nowrap text-sm text-gray-500"},Je={class:"px-6 py-4 whitespace-nowrap text-sm text-gray-500"},Ke={key:0},Xe={key:1,class:"text-red-500"},Ze={key:2},et={class:"px-6 py-4 whitespace-nowrap text-sm text-gray-500"},tt={key:0,class:"text-green-500"},st={key:1,class:"text-green-500"},at={key:2,class:"text-red-500"},rt={key:3},lt={key:4,class:"text-gray-400"},ot=R({__name:"ImportDeck",props:{userId:{type:String,required:!0}},setup(T){const D=T,$=V(),N=B(),S=ee(),k=U(()=>$.isAdmin),p=y(""),v=y(""),l=y([]),x=y(!1),w=y(!1),b=y(0),g=y(null),E=y(null),m=y(!1),o=U(()=>l.value.length>0&&l.value.every(d=>d.scryfallId||d.scryfallIdError)),h=U(()=>l.value.some(d=>d.scryfallIdError)),u=function(s=new Date){const t=s.getFullYear(),f=String(s.getMonth()+1).padStart(2,"0"),C=String(s.getDate()).padStart(2,"0"),A=String(s.getHours()).padStart(2,"0"),M=String(s.getMinutes()).padStart(2,"0");return`${t}-${f}-${C} ${A}:${M}`},n=()=>{if(!(!v.value||!p.value||x.value)){x.value=!0,g.value=null,E.value=null,l.value=[];try{const d=v.value.split(`
`).filter(t=>t.trim());let s="";for(const t of d){const f=t.match(/^\**\s*(\w+)\s*\((\d+)\)\s*\**$/);if(f){s=f[1].trim();continue}const C=t.match(/^(\d+)\s+(.+)$/);if(C&&s){const[A,M,z]=C;l.value.push({name:z.trim(),category:s,qty:parseInt(M.trim(),10)})}}l.value.length===0&&(g.value="No valid card entries found. Please check your format.")}catch(d){console.error("Error parsing deck list:",d),g.value=d.message||"Failed to parse deck list"}finally{x.value=!1}}},_=async()=>{if(w.value)return;w.value=!0,b.value=0,g.value=null;const d=s=>new Promise(t=>setTimeout(t,s));try{for(let s=0;s<l.value.length;s++){const t=l.value[s];if(!t.scryfallId&&!t.scryfallIdError){try{const f=encodeURIComponent(t.name),C=await fetch(`https://api.scryfall.com/cards/named?exact=${f}`);if(!C.ok)throw new Error(`Card not found: ${C.statusText}`);const A=await C.json();A.id?t.scryfallId=A.id:t.scryfallIdError="No scryfall ID available"}catch(f){console.error(`Error fetching scryfall ID for ${t.name}:`,f),t.scryfallIdError=f.message||"Failed to fetch ID"}b.value=s+1,await d(100)}}}catch(s){console.error("Error in fetch process:",s),g.value=s.message||"Failed to fetch all multiverse IDs"}finally{w.value=!1}},i=async()=>{if(m.value||!p.value)return;m.value=!0,g.value=null,E.value=null;const d=[];try{for(const t of l.value)if(t.scryfallId)try{for(let f=0;f<t.qty;f++){const C=await N.addCardToUser(D.userId,t.scryfallId)||{};d.push(C)}t.added=!0}catch(f){console.error(`Error adding card ${t.name} to user's collection:`,f),t.scryfallIdError=f.message||"Failed to add to collection"}const s=await S.createDeckForUser({name:p.value,description:`Imported on ${u()}`},D.userId);for(const t of d){console.log(t);try{console.log("attempting to add card to deck"),await S.addUserCardToDeckForUser(D.userId,s.id,t.userCard.id)}catch(f){console.error(`Error adding card ${t.name} to deck:`,f)}}await N.fetchUserCards(D.userId),E.value=`Successfully added cards to collection and created deck "${p.value}" with ${l.value.length} cards!`,p.value="",v.value=""}catch(s){console.error("Error creating deck:",s),g.value=s.message||"Failed to create deck"}finally{m.value=!1}};return(d,s)=>(r(),a("div",De,[s[6]||(s[6]=e("h2",{class:"text-2xl font-bold mb-4"},"Import Deck",-1)),k.value?(r(),a("div",Ae,[e("div",Fe,[s[2]||(s[2]=e("label",{for:"deckName",class:"block text-gray-700 mb-2"},"Deck Name",-1)),q(e("input",{"onUpdate:modelValue":s[0]||(s[0]=t=>p.value=t),id:"deckName",type:"text",class:"w-full p-2 border rounded",placeholder:"Enter deck name",disabled:x.value},null,8,Le),[[P,p.value]])]),e("div",Ue,[s[3]||(s[3]=e("label",{for:"deckList",class:"block text-gray-700 mb-2"},"Deck List",-1)),q(e("textarea",{"onUpdate:modelValue":s[1]||(s[1]=t=>v.value=t),id:"deckList",class:"w-full p-2 border rounded h-40",placeholder:"Paste deck list here (e.g. 'Lands (18)\\n5 Mountain\\n12 Plains')",disabled:x.value},null,8,Te),[[P,v.value]]),s[4]||(s[4]=e("p",{class:"text-sm text-gray-500 mt-1"},' Format: Category headers like "Lands (18)", followed by "Quantity Card Name" on each line. ',-1))]),e("div",qe,[e("button",{onClick:n,class:"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded",disabled:x.value||!v.value||!p.value}," Parse Deck List ",8,Pe),l.value.length>0&&!o.value?(r(),a("button",{key:0,onClick:_,class:"bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded",disabled:w.value||o.value},c(w.value?`Fetching IDs (${b.value}/${l.value.length})`:"Fetch Scryfall IDs"),9,Me)):I("",!0),l.value.length>0&&o.value&&!h.value?(r(),a("button",{key:1,onClick:i,class:"bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded",disabled:m.value},c(m.value?"Creating Deck...":"Create Deck"),9,Re)):I("",!0)]),g.value?(r(),a("div",Ve,c(g.value),1)):I("",!0),E.value?(r(),a("div",Be,c(E.value),1)):I("",!0),l.value.length>0?(r(),a("div",Qe,[e("h3",He,"Parsed Cards ("+c(l.value.length)+" total)",1),e("div",ze,[e("table",je,[s[5]||(s[5]=e("thead",{class:"bg-gray-50"},[e("tr",null,[e("th",{scope:"col",class:"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"},"Card Name"),e("th",{scope:"col",class:"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"},"Category"),e("th",{scope:"col",class:"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"},"Qty"),e("th",{scope:"col",class:"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"},"Scryfall ID"),e("th",{scope:"col",class:"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"},"Status")])],-1)),e("tbody",Ge,[(r(!0),a(Q,null,H(l.value,(t,f)=>(r(),a("tr",{key:f},[e("td",Oe,c(t.name),1),e("td",We,c(t.category),1),e("td",Ye,c(t.qty),1),e("td",Je,[t.scryfallId?(r(),a("span",Ke,c(t.scryfallId),1)):t.scryfallIdError?(r(),a("span",Xe,"Error: "+c(t.scryfallIdError),1)):(r(),a("span",Ze,"-"))]),e("td",et,[t.added&&t.addedToDeck?(r(),a("span",tt,"Added to Collection & Deck")):t.added?(r(),a("span",st,"Added to Collection")):t.scryfallIdError?(r(),a("span",at,"Error")):t.scryfallId?(r(),a("span",rt,"Ready")):(r(),a("span",lt,"Pending"))])]))),128))])])])])):I("",!0)])):(r(),a("div",Ne," Only administrators can import decks. "))]))}}),dt={class:"mt-8"},nt={key:0,class:"text-center py-10"},it={key:1,class:"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded"},ct={key:2,class:"space-y-6"},ut={class:"bg-white p-6 rounded shadow-md"},pt={class:"grid grid-cols-1 md:grid-cols-2 gap-4"},yt={key:0},mt={class:"bg-white p-6 rounded shadow-md"},ft={class:"mb-4"},vt=["disabled"],gt={class:"bg-white p-6 rounded shadow-md"},wt=R({__name:"[id]",setup(T){const $=G().params.id,N=J(),S=V(),k=B(),p=y(!0),v=y(null),l=y(null),x=y(""),w=async()=>{p.value=!0,v.value=null;try{const m=await $fetch(`${N.public.apiBaseUrl}/users/${$}`,{method:"GET",headers:{Authorization:`Bearer ${S.token}`}});l.value=m,console.log("Fetched user data:",l.value)}catch(m){console.error("Error fetching user data:",m),v.value="Failed to load user data"}finally{p.value=!1}},b=async()=>{x.value&&(await k.addCardToUser($,x.value),x.value="")};O(async()=>{await S.initAuth(),S.token?(await w(),await k.fetchUserCards($)):v.value="Authentication required"});const g=(m,o)=>{k.removeCard(m,o)},E=m=>{console.log(m),m.action==="Remove"&&g(m.card.id,m.card.userId)};return(m,o)=>{const h=j;return r(),a("div",null,[F(Z,{title:"Manage User Cards",subtitle:l.value?`Managing cards for ${l.value.firstName} ${l.value.lastName}`:"Loading user..."},null,8,["subtitle"]),e("div",dt,[F(h,{to:"/admin",class:"flex items-center mb-4 text-blue-600 hover:text-blue-800"},{default:W(()=>o[1]||(o[1]=[e("span",{class:"mr-1"},"←",-1),K(" Back to Admin Dashboard ")])),_:1}),p.value?(r(),a("div",nt,o[2]||(o[2]=[e("p",null,"Loading user data...",-1)]))):v.value?(r(),a("div",it,c(v.value),1)):l.value?(r(),a("div",ct,[e("div",ut,[o[7]||(o[7]=e("h2",{class:"text-2xl font-bold mb-2"},"User Information",-1)),e("div",pt,[e("div",null,[o[3]||(o[3]=e("p",{class:"text-gray-600"},"Name",-1)),e("p",null,c(l.value.firstName)+" "+c(l.value.lastName),1)]),e("div",null,[o[4]||(o[4]=e("p",{class:"text-gray-600"},"Email",-1)),e("p",null,c(l.value.email),1)]),e("div",null,[o[5]||(o[5]=e("p",{class:"text-gray-600"},"Role",-1)),e("p",null,c(l.value.role),1)]),l.value.createdAt?(r(),a("div",yt,[o[6]||(o[6]=e("p",{class:"text-gray-600"},"Member Since",-1)),e("p",null,c(new Date(l.value.createdAt).toLocaleDateString()),1)])):I("",!0)])]),e("div",mt,[o[9]||(o[9]=e("h2",{class:"text-2xl font-bold mb-4"},"Add Card to User",-1)),e("form",{onSubmit:Y(b,["prevent"])},[e("div",ft,[o[8]||(o[8]=e("label",{for:"scryfallId",class:"block text-gray-700 mb-2"},"Card Scryfall ID",-1)),q(e("input",{"onUpdate:modelValue":o[0]||(o[0]=u=>x.value=u),type:"text",id:"scryfallId",class:"w-full p-2 border rounded",placeholder:"Enter card's multiverse ID",required:""},null,512),[[P,x.value]])]),e("button",{type:"submit",class:"bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded",disabled:L(k).loading},c(L(k).loading?"Adding...":"Add Card"),9,vt)],32)]),F(Se,{userId:L($)},null,8,["userId"]),F(ot,{userId:L($)},null,8,["userId"]),e("div",gt,[o[10]||(o[10]=e("h2",{class:"text-2xl font-bold mb-4"},"User's Cards",-1)),F(X,{userId:L($),cardActions:["Remove"],onOnClickAction:E},null,8,["userId"])])])):I("",!0)])])}}});export{wt as default};
